server {
    listen 80;
    server_name api.furious-todo.ru;
    server_tokens off;

    include /etc/nginx/snippets/certbot.conf;

    rewrite ^(.*) https://api.furious-todo.ru$1 permanent;
}

server {
    listen 443 ssl http2;
    server_name api.furious-todo.ru;
    server_tokens off;

    ssl_certificate /etc/letsencrypt/live/api.furious-todo.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.furious-todo.ru/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/api.furious-todo.ru/chain.pem;

    include /etc/nginx/snippets/ssl.conf;
    include /etc/nginx/snippets/certbot.conf;

    client_max_body_size 32m;

    add_header 'Access-Control-Allow-Origin' '*' always;
    add_header 'Access-Control-Allow-Credentials' 'true' always;
    add_header 'Access-Control-Allow-Methods' 'GET,POST,PATCH,PUT,DELETE,HEAD,OPTIONS' always;
    add_header 'Access-Control-Allow-Headers' 'Origin,Content-Type,Accept,Authorization' always;

    location / {
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Methods' 'GET,POST,PATCH,PUT,DELETE,HEAD,OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Origin,Content-Type,Accept,Authorization' always;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        proxy_set_header  Host $host;
        proxy_set_header  X-Real-IP $remote_addr;
        proxy_set_header  X-Forwarded-Proto https;
        proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header  X-Forwarded-Host $remote_addr;
        proxy_set_header  X-NginX-Proxy true;
        proxy_pass        api-nginx;
        proxy_ssl_session_reuse off;
        proxy_redirect off;
    }
}